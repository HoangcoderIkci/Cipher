# strDecrypt = """
# ГРАФИНЯБЫЛАЖЕНЩИНАСВОСТОЧНЫМТИПОМТИПОМДУДОГОЛИЦАЛЕТСОРОКАПЯТИВИДИМОИЗНУРЕННАЯДЕТЬМИКОТОРЫХУНЕЙБЫЛОДВЕНАДЦАТЬЧЕЛОВЕКМЕДЛИТЕЛЬНОСТЬЕЕДВИЖЕНИЙИГОВОРАПРОИСХОДИВШАЯОТСЛАБОСТИТИЛПРИДАВАЛАЕЙЗНЯЧИТЕЛЬНЫЙВИДВНУШАВШИЙУВАЖЕНИЕКНЯГИНЯАННАМИХАЙЛОВНАДРУБЕЦКАЯКАКДОМАШНИЙЧЕЛОВЕКСИДЕЛАТУТЖЕПОМОГАЯВДЕЛЕПРИНИМАНИЯИЗАНИМАНИЯРАЗГОВОРОМГОСТЕЙ
# """
str_template = "ГРАФИНЯБЫЛАЖЕНЩИНАСВОСТОЧНЫМТИПОМТИПОМДУДОГОЛИЦАЛЕТСОРОКАПЯТИВИДИМОИЗНУРЕННАЯДЕТЬМИКОТОРЫХУНЕЙБЫЛОДВЕНАДЦАТЬЧЕЛОВЕКМЕДЛИТЕЛЬНОСТЬЕЕДВИЖЕНИЙИГОВОРАПРОИСХОДИВШАЯОТСЛАБОСТИТИЛПРИДАВАЛАЕЙЗНЯЧИТЕЛЬНЫЙВИДВНУШАВШИЙУВАЖЕНИЕКНЯГИНЯАННАМИХАЙЛОВНАДРУБЕЦКАЯКАКДОМАШНИЙЧЕЛОВЕКСИДЕЛАТУТЖЕПОМОГАЯВДЕЛЕПРИНИМАНИЯИЗАНИМАНИЯРАЗГОВОРОМГОСТЕЙ"

strDecrypt = """
ЮРЬЙЖ КБМПО ЬЛФКЯ ЖКЬЗГ ЦЗЭЦУ КПДЭЖ ЫЦДЭЖ ЫЦДШН ШЦЮЦО ЖИЬОФ ЭЗЦРЦ СЬЫБЭ ЖГЖШЖ ДЦЖАК НРФКК ЬБШФЭ ТДЖСЦ ЭЦРПЩ НКФЕМ ПОЦШГ ФКЬШИ ЬЭТУФ ОЦГФС ДФШОЖ ЭФОТК ЦЗЭТФ ФШГЖЛ ФКЖЕЖ ЮЦГЦР ЬЫРЦЖ ЗЩЦШЖ ГВЬБЦ ЭЗОЬМ ЦЗЭЖЭ ЖОЫРЖ ШЬГЬО ЬФЕАК БУЖЭФ ОТКПЕ ГЖШГК НВЬГВ ЖЕНГЬ ЛФКЖФ СКБЮЖ КБЬКК ЬДЖЩЬ ЕОЦГК ЬШРНМ ФИСЬБ СЬСШЦ ДЬВКЖ ЕУФОЦ ГФСЗЖ ШФОЬЭ НЭЛФЫ ЦДЦЮЬ БГШФО ФЫРЖК ЖДЬКЖ БЖАЬК ЖДЬКЖ БРЬАЮ ЦГЦРЦ ДЮЦЗЭ ФЕ
"""
strDecrypt = strDecrypt.replace("Ъ", "ь")
strDecrypt = strDecrypt.replace(" ", "")
strDecrypt = strDecrypt.replace("\n", "")
strDecrypt = strDecrypt.upper()
strDecrypt = strDecrypt.replace("\n", "").replace(" ", "")

str_template = str_template.replace("\n", "")
ord_A = ord("А")


def tao_danh_sach_key_1(strDecrypt):
    arrTS_enc = [0] * 32
    for elem in strDecrypt:
        arrTS_enc[ord(elem) - ord_A] += 1
    for i in range(26, 31):
        arrTS_enc[i] = arrTS_enc[i + 1]
    arrTS_enc.pop(-1)
    tu_dien_enc = {i: arrTS_enc[i] for i in range(len(arrTS_enc))}
    # print(tu_dien)
    danh_sach_key_enc = sorted(tu_dien_enc, key=tu_dien_enc.get, reverse=True)
    print(danh_sach_key_enc)
    return danh_sach_key_enc


danh_sach_key_enc = tao_danh_sach_key_1(strDecrypt)
danh_sach_key_de_so_sanh = tao_danh_sach_key_1(str_template)
# danh_sach_key_enc = [
#     22,
#     20,
#     28,
#     6,
#     10,
#     29,
#     7,
#     3,
#     16,
#     14,
#     17,
#     24,
#     4,
#     27,
#     13,
#     15,
#     0,
#     1,
#     30,
#     12,
#     5,
#     25,
#     19,
#     18,
#     2,
#     11,
#     23,
#     8,
#     31,
#     26,
#     9,
# ]
# temp_l1 = [
#     6,
#     22,
#     27,
#     10,
#     20,
#     28,
#     3,
#     14,
#     24,
#     4,
#     1,
#     16,
#     7,
#     5,
#     17,
#     13,
#     26,
#     29,
#     15,
#     18,
#     0,
#     2,
#     11,
#     12,
#     19,
#     8,
#     25,
#     9,
#     30,
#     21,
#     23,
# ]
# temp_l2 = [
#     22,
#     20,
#     27,
#     6,
#     10,
#     28,
#     7,
#     3,
#     16,
#     14,
#     17,
#     24,
#     4,
#     26,
#     13,
#     15,
#     0,
#     1,
#     29,
#     12,
#     5,
#     25,
#     19,
#     18,
#     2,
#     11,
#     23,
#     8,
#     30,
#     25,
#     9,
# ]


# for i in range(31):
#     print(i, end=",")
# print()
# for elem in temp_l1:
#     if elem in temp_l2:
#         print(temp_l2.index(elem), end=",")
#     else:
#         print(-1, end=",")
# print()
# for i in range(len(danh_sach_key_enc)):
#     if danh_sach_key_enc[i] >= 26:
#         danh_sach_key_enc[i] -= 1
# print(danh_sach_key_enc)
def tao_table_2_chieu_bigram_loai1(strDecrypted):
    Denta_enc = [[0] * 31 for i in range(31)]
    for i in range(len(strDecrypted) - 1):
        f, l = ord(strDecrypted[i]) - ord_A, ord(strDecrypted[i + 1]) - ord_A
        if f > 26:
            f -= 1
        if l > 26:
            l -= 1
        if f == 26 or l == 26:
            continue
        Denta_enc[f][l] += 1
    s_Denta = 0
    for el in Denta_enc:
        s_Denta += sum(el)
    for r in Denta_enc:
        for cl in range(len(r)):
            r[cl] /= s_Denta
    return Denta_enc


Denta_enc = tao_table_2_chieu_bigram_loai1(strDecrypted=strDecrypt)
mang_ts_de_so_sanh = tao_table_2_chieu_bigram_loai1(str_template)


def hoan_vi_hang_cot(danh_sach_key_enc, Denta_enc):
    danh_sach_da_dao_Denta = []
    danh_sach_da_dao_Denta = [Denta_enc[i] for i in danh_sach_key_enc]
    danh_sach_da_dao_Denta = [
        [hang[i] for i in danh_sach_key_enc] for hang in danh_sach_da_dao_Denta
    ]
    return danh_sach_da_dao_Denta


danh_sach_da_dao_Denta = hoan_vi_hang_cot(danh_sach_key_enc, Denta_enc)
danh_sach_da_dao_B = hoan_vi_hang_cot(danh_sach_key_de_so_sanh, mang_ts_de_so_sanh)
# l3 = [
#     2,
#     12,
#     35,
#     8,
#     14,
#     7,
#     6,
#     15,
#     7,
#     7,
#     19,
#     27,
#     19,
#     45,
#     5,
#     11,
#     26,
#     31,
#     27,
#     3,
#     1,
#     10,
#     6,
#     7,
#     10,
#     1,
#     2,
#     0,
#     0,
#     6,
#     9,
#     5,
#     0,
#     0,
#     0,
#     0,
#     9,
#     1,
#     0,
#     6,
#     0,
#     0,
#     6,
#     0,
#     2,
#     21,
#     0,
#     8,
#     1,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     11,
#     0,
#     0,
#     0,
#     2,
#     35,
#     1,
#     5,
#     3,
#     3,
#     32,
#     0,
#     2,
#     17,
#     0,
#     7,
#     10,
#     3,
#     9,
#     58,
#     6,
#     6,
#     19,
#     6,
#     7,
#     0,
#     1,
#     1,
#     2,
#     4,
#     1,
#     18,
#     1,
#     2,
#     0,
#     3,
#     7,
#     0,
#     0,
#     0,
#     3,
#     3,
#     0,
#     0,
#     5,
#     0,
#     1,
#     5,
#     0,
#     1,
#     50,
#     0,
#     7,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     25,
#     0,
#     3,
#     1,
#     1,
#     29,
#     1,
#     1,
#     13,
#     0,
#     1,
#     5,
#     1,
#     13,
#     22,
#     3,
#     6,
#     8,
#     1,
#     10,
#     0,
#     0,
#     1,
#     1,
#     1,
#     0,
#     5,
#     1,
#     0,
#     0,
#     1,
#     2,
#     9,
#     18,
#     11,
#     27,
#     7,
#     5,
#     10,
#     6,
#     15,
#     13,
#     35,
#     24,
#     63,
#     7,
#     16,
#     39,
#     37,
#     33,
#     3,
#     1,
#     8,
#     3,
#     7,
#     3,
#     3,
#     0,
#     0,
#     1,
#     1,
#     2,
#     5,
#     1,
#     0,
#     0,
#     6,
#     12,
#     0,
#     0,
#     5,
#     0,
#     0,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     35,
#     1,
#     7,
#     1,
#     5,
#     3,
#     0,
#     0,
#     4,
#     0,
#     2,
#     1,
#     2,
#     9,
#     9,
#     1,
#     3,
#     1,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     4,
#     0,
#     0,
#     0,
#     4,
#     4,
#     6,
#     22,
#     5,
#     10,
#     21,
#     2,
#     23,
#     19,
#     11,
#     19,
#     21,
#     20,
#     32,
#     8,
#     13,
#     11,
#     29,
#     29,
#     3,
#     1,
#     17,
#     3,
#     11,
#     1,
#     1,
#     0,
#     0,
#     1,
#     3,
#     17,
#     1,
#     1,
#     4,
#     1,
#     3,
#     0,
#     1,
#     2,
#     4,
#     0,
#     5,
#     1,
#     2,
#     7,
#     9,
#     7,
#     3,
#     10,
#     2,
#     0,
#     0,
#     0,
#     1,
#     3,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     24,
#     1,
#     4,
#     1,
#     0,
#     4,
#     1,
#     1,
#     26,
#     0,
#     1,
#     4,
#     1,
#     2,
#     66,
#     2,
#     10,
#     3,
#     7,
#     10,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     25,
#     1,
#     1,
#     1,
#     1,
#     33,
#     2,
#     1,
#     36,
#     0,
#     1,
#     2,
#     1,
#     8,
#     30,
#     2,
#     0,
#     3,
#     1,
#     6,
#     0,
#     4,
#     0,
#     1,
#     0,
#     0,
#     3,
#     20,
#     0,
#     4,
#     9,
#     18,
#     2,
#     4,
#     1,
#     1,
#     21,
#     1,
#     2,
#     23,
#     0,
#     3,
#     1,
#     3,
#     7,
#     19,
#     5,
#     2,
#     5,
#     3,
#     9,
#     1,
#     0,
#     0,
#     2,
#     0,
#     0,
#     5,
#     1,
#     1,
#     0,
#     3,
#     54,
#     1,
#     2,
#     3,
#     3,
#     34,
#     0,
#     0,
#     58,
#     0,
#     3,
#     0,
#     1,
#     24,
#     67,
#     2,
#     1,
#     9,
#     9,
#     7,
#     1,
#     0,
#     5,
#     2,
#     0,
#     0,
#     36,
#     0,
#     0,
#     3,
#     5,
#     1,
#     28,
#     84,
#     32,
#     47,
#     15,
#     7,
#     18,
#     12,
#     29,
#     19,
#     41,
#     38,
#     30,
#     9,
#     18,
#     43,
#     50,
#     39,
#     3,
#     2,
#     5,
#     2,
#     12,
#     4,
#     3,
#     0,
#     0,
#     2,
#     3,
#     2,
#     7,
#     0,
#     0,
#     0,
#     0,
#     15,
#     0,
#     0,
#     4,
#     0,
#     0,
#     9,
#     0,
#     1,
#     46,
#     0,
#     41,
#     1,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     2,
#     55,
#     1,
#     4,
#     4,
#     3,
#     37,
#     3,
#     1,
#     24,
#     0,
#     3,
#     1,
#     3,
#     7,
#     56,
#     2,
#     1,
#     5,
#     9,
#     16,
#     0,
#     1,
#     1,
#     1,
#     2,
#     0,
#     8,
#     3,
#     0,
#     0,
#     5,
#     8,
#     1,
#     7,
#     1,
#     2,
#     25,
#     0,
#     0,
#     6,
#     0,
#     40,
#     13,
#     3,
#     9,
#     27,
#     11,
#     4,
#     11,
#     82,
#     6,
#     0,
#     1,
#     1,
#     2,
#     2,
#     0,
#     1,
#     8,
#     0,
#     0,
#     17,
#     35,
#     1,
#     27,
#     1,
#     3,
#     31,
#     0,
#     1,
#     28,
#     0,
#     5,
#     1,
#     1,
#     11,
#     56,
#     4,
#     26,
#     18,
#     2,
#     10,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     11,
#     21,
#     0,
#     0,
#     4,
#     1,
#     4,
#     4,
#     4,
#     11,
#     2,
#     6,
#     3,
#     2,
#     0,
#     8,
#     5,
#     5,
#     5,
#     1,
#     5,
#     7,
#     14,
#     7,
#     0,
#     0,
#     1,
#     0,
#     8,
#     3,
#     2,
#     0,
#     0,
#     0,
#     9,
#     1,
#     2,
#     0,
#     0,
#     0,
#     0,
#     2,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     1,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     4,
#     1,
#     4,
#     1,
#     3,
#     1,
#     0,
#     2,
#     3,
#     0,
#     4,
#     3,
#     3,
#     4,
#     18,
#     5,
#     3,
#     4,
#     2,
#     2,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     3,
#     0,
#     0,
#     0,
#     0,
#     7,
#     0,
#     0,
#     10,
#     0,
#     2,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     12,
#     0,
#     0,
#     0,
#     0,
#     23,
#     0,
#     0,
#     13,
#     0,
#     2,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     7,
#     1,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     5,
#     0,
#     0,
#     0,
#     0,
#     11,
#     0,
#     0,
#     14,
#     0,
#     1,
#     2,
#     0,
#     2,
#     2,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     3,
#     0,
#     0,
#     0,
#     0,
#     8,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     9,
#     1,
#     3,
#     12,
#     0,
#     2,
#     4,
#     7,
#     3,
#     6,
#     6,
#     3,
#     2,
#     10,
#     3,
#     9,
#     4,
#     1,
#     0,
#     16,
#     0,
#     1,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     4,
#     1,
#     1,
#     2,
#     0,
#     2,
#     2,
#     0,
#     6,
#     0,
#     3,
#     13,
#     2,
#     4,
#     1,
#     11,
#     3,
#     0,
#     0,
#     0,
#     0,
#     1,
#     4,
#     0,
#     0,
#     0,
#     1,
#     3,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     1,
#     9,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     1,
#     2,
#     1,
#     0,
#     0,
#     3,
#     1,
#     0,
#     1,
#     0,
#     1,
#     1,
#     1,
#     3,
#     1,
#     1,
#     7,
#     0,
#     0,
#     0,
#     1,
#     1,
#     0,
#     4,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     3,
#     9,
#     1,
#     3,
#     3,
#     1,
#     5,
#     3,
#     2,
#     3,
#     3,
#     4,
#     6,
#     3,
#     6,
#     3,
#     6,
#     10,
#     0,
#     0,
#     2,
#     1,
#     4,
#     1,
#     1,
#     0,
#     0,
#     1,
#     1,
#     1,
# ]
# TS = [l3[i : i + 31] for i in range(0, len(l3), 31)]
# s_L3 = 0
# for el in TS:
#     s_L3 += sum(el)
# for r in TS:
#     for cl in range(len(r)):
#         r[cl] /= s_L3
# mang_ts_de_so_sanh = [0] * 31
# for i in range(31):
#     t = -TS[i][i]
#     t += sum(TS[i])
#     for j in range(len(TS)):
#         t += TS[j][i]
#     mang_ts_de_so_sanh[i] = t
# tu_dien_arr_original = {
#     i: mang_ts_de_so_sanh[i] for i in range(len(mang_ts_de_so_sanh))
# }
# danh_sach_key_de_so_sanh = sorted(
#     tu_dien_arr_original, key=tu_dien_arr_original.get, reverse=True
# )

# danh_sach_da_dao_B = []
# danh_sach_da_dao_B = [TS[i] for i in danh_sach_key_de_so_sanh]
# danh_sach_da_dao_B = [
#     [hang[i] for i in danh_sach_key_de_so_sanh] for hang in danh_sach_da_dao_B
# ]

r = 0
for i in range(len(danh_sach_da_dao_Denta)):
    for j in range(len(danh_sach_da_dao_Denta[i])):
        r += abs(danh_sach_da_dao_Denta[i][j] - danh_sach_da_dao_B[i][j])
print(r)


for i in range(len(danh_sach_key_de_so_sanh)):
    if danh_sach_key_de_so_sanh[i] >= 26:
        danh_sach_key_de_so_sanh[i] += 1
    if danh_sach_key_enc[i] >= 26:
        danh_sach_key_enc[i] += 1
for i in range(len(danh_sach_key_de_so_sanh)):
    print(chr(danh_sach_key_de_so_sanh[i] + ord_A), end=" ")
print()
for i in range(len(danh_sach_key_de_so_sanh)):
    print(chr(danh_sach_key_enc[i] + ord_A), end=" ")
