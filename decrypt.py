import pyfiglet

print(
    "================================================================================================"
)

big_font = pyfiglet.Figlet()
font = pyfiglet.Figlet(font="standard")
print(font.renderText("Welcome to the decryption application by HoangCoder "))

deText = "ЫСОТЫ РЕХБО УЦМНЕ НИИНИ ИЛТТЛ АИНЬМ ААНОЕ ЬНАИШ ЯДМЬЕ УРТНЬ АЕПСЧ ДТВАЯ ЕАПОС РЪЖЛА ИВИОТ ЗЪПАИ ЛУЗЦГ ИЖЕПО ИЗШДВ ИЕВОЕ РВАТЗ ИЕЛДО ВОБЛО КШМУБ ЙЗМСО ВЕКЕИ ИСМТО НУЕМД ОСВСА ИФИГН РОРУА ОНИПОАОВЕТБОРЙУСЗПХКР"
# deText = "АННЮИ ОМТДА ТЪОЯЛ ЩТРИП ООСИС МВИЕЗ ИКРОТ УБУОВ СЫНЗТ АЕКАЛ ИНСЕМ НЯАРЕ ЕЧОНТ ОНПХИ АЫЛСВ ОЕТАП НКИРМ ИИОНС ЫЫХВВ РАОНЛ ЙСОКЕ ЕЧЕАП АВСОЕ ПРОНЕ ВИНАЛ ПЫНАЫ ЛНОАВ ААЙИМ ВХНЬЕ ВАКРС СУНМЛ ОКВСМ МУЙОР ПВЯОР БОЫВО ТМАГД ТОРЕО АВНОМ ИНСКТСЫНСЧМХЭАДЫЛЬ"
# # Loại bỏ khoảng trắng trong chuỗi
deText = deText.replace(" ", "")
# print(len(deText))
# print((deText))


deText = deText.upper()
LEN_KEY = int(
    input("ENTER YOUR LEN KEY:  ")
)  ##11  ###################### CHÚ Ý CẦN NHẬP LEN KEY #####################

col = LEN_KEY
row = int(len(deText) / col)
TEXT = [list(deText[i : i + col]) for i in range(0, len(deText), col)]
ordA = ord("А")
# with open("res2.txt", "a", encoding="utf-8") as f:
#     for r in TEXT:
#         f.write(",".join(str(x) for x in r) + "\n")
l3 = [
    2,
    12,
    35,
    8,
    14,
    7,
    6,
    15,
    7,
    7,
    19,
    27,
    19,
    45,
    5,
    11,
    26,
    31,
    27,
    3,
    1,
    10,
    6,
    7,
    10,
    1,
    2,
    0,
    0,
    6,
    9,
    5,
    0,
    0,
    0,
    0,
    9,
    1,
    0,
    6,
    0,
    0,
    6,
    0,
    2,
    21,
    0,
    8,
    1,
    0,
    6,
    0,
    0,
    0,
    0,
    0,
    1,
    11,
    0,
    0,
    0,
    2,
    35,
    1,
    5,
    3,
    3,
    32,
    0,
    2,
    17,
    0,
    7,
    10,
    3,
    9,
    58,
    6,
    6,
    19,
    6,
    7,
    0,
    1,
    1,
    2,
    4,
    1,
    18,
    1,
    2,
    0,
    3,
    7,
    0,
    0,
    0,
    3,
    3,
    0,
    0,
    5,
    0,
    1,
    5,
    0,
    1,
    50,
    0,
    7,
    0,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    25,
    0,
    3,
    1,
    1,
    29,
    1,
    1,
    13,
    0,
    1,
    5,
    1,
    13,
    22,
    3,
    6,
    8,
    1,
    10,
    0,
    0,
    1,
    1,
    1,
    0,
    5,
    1,
    0,
    0,
    1,
    2,
    9,
    18,
    11,
    27,
    7,
    5,
    10,
    6,
    15,
    13,
    35,
    24,
    63,
    7,
    16,
    39,
    37,
    33,
    3,
    1,
    8,
    3,
    7,
    3,
    3,
    0,
    0,
    1,
    1,
    2,
    5,
    1,
    0,
    0,
    6,
    12,
    0,
    0,
    5,
    0,
    0,
    0,
    0,
    6,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    35,
    1,
    7,
    1,
    5,
    3,
    0,
    0,
    4,
    0,
    2,
    1,
    2,
    9,
    9,
    1,
    3,
    1,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    4,
    0,
    0,
    0,
    4,
    4,
    6,
    22,
    5,
    10,
    21,
    2,
    23,
    19,
    11,
    19,
    21,
    20,
    32,
    8,
    13,
    11,
    29,
    29,
    3,
    1,
    17,
    3,
    11,
    1,
    1,
    0,
    0,
    1,
    3,
    17,
    1,
    1,
    4,
    1,
    3,
    0,
    1,
    2,
    4,
    0,
    5,
    1,
    2,
    7,
    9,
    7,
    3,
    10,
    2,
    0,
    0,
    0,
    1,
    3,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    1,
    4,
    1,
    0,
    4,
    1,
    1,
    26,
    0,
    1,
    4,
    1,
    2,
    66,
    2,
    10,
    3,
    7,
    10,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    25,
    1,
    1,
    1,
    1,
    33,
    2,
    1,
    36,
    0,
    1,
    2,
    1,
    8,
    30,
    2,
    0,
    3,
    1,
    6,
    0,
    4,
    0,
    1,
    0,
    0,
    3,
    20,
    0,
    4,
    9,
    18,
    2,
    4,
    1,
    1,
    21,
    1,
    2,
    23,
    0,
    3,
    1,
    3,
    7,
    19,
    5,
    2,
    5,
    3,
    9,
    1,
    0,
    0,
    2,
    0,
    0,
    5,
    1,
    1,
    0,
    3,
    54,
    1,
    2,
    3,
    3,
    34,
    0,
    0,
    58,
    0,
    3,
    0,
    1,
    24,
    67,
    2,
    1,
    9,
    9,
    7,
    1,
    0,
    5,
    2,
    0,
    0,
    36,
    0,
    0,
    3,
    5,
    1,
    28,
    84,
    32,
    47,
    15,
    7,
    18,
    12,
    29,
    19,
    41,
    38,
    30,
    9,
    18,
    43,
    50,
    39,
    3,
    2,
    5,
    2,
    12,
    4,
    3,
    0,
    0,
    2,
    3,
    2,
    7,
    0,
    0,
    0,
    0,
    15,
    0,
    0,
    4,
    0,
    0,
    9,
    0,
    1,
    46,
    0,
    41,
    1,
    0,
    6,
    0,
    0,
    0,
    0,
    0,
    0,
    2,
    0,
    0,
    0,
    2,
    55,
    1,
    4,
    4,
    3,
    37,
    3,
    1,
    24,
    0,
    3,
    1,
    3,
    7,
    56,
    2,
    1,
    5,
    9,
    16,
    0,
    1,
    1,
    1,
    2,
    0,
    8,
    3,
    0,
    0,
    5,
    8,
    1,
    7,
    1,
    2,
    25,
    0,
    0,
    6,
    0,
    40,
    13,
    3,
    9,
    27,
    11,
    4,
    11,
    82,
    6,
    0,
    1,
    1,
    2,
    2,
    0,
    1,
    8,
    0,
    0,
    17,
    35,
    1,
    27,
    1,
    3,
    31,
    0,
    1,
    28,
    0,
    5,
    1,
    1,
    11,
    56,
    4,
    26,
    18,
    2,
    10,
    0,
    0,
    0,
    1,
    0,
    0,
    11,
    21,
    0,
    0,
    4,
    1,
    4,
    4,
    4,
    11,
    2,
    6,
    3,
    2,
    0,
    8,
    5,
    5,
    5,
    1,
    5,
    7,
    14,
    7,
    0,
    0,
    1,
    0,
    8,
    3,
    2,
    0,
    0,
    0,
    9,
    1,
    2,
    0,
    0,
    0,
    0,
    2,
    0,
    0,
    2,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    4,
    1,
    4,
    1,
    3,
    1,
    0,
    2,
    3,
    0,
    4,
    3,
    3,
    4,
    18,
    5,
    3,
    4,
    2,
    2,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    3,
    0,
    0,
    0,
    0,
    7,
    0,
    0,
    10,
    0,
    2,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    12,
    0,
    0,
    0,
    0,
    23,
    0,
    0,
    13,
    0,
    2,
    0,
    0,
    6,
    0,
    0,
    0,
    0,
    7,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    5,
    0,
    0,
    0,
    0,
    11,
    0,
    0,
    14,
    0,
    1,
    2,
    0,
    2,
    2,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    3,
    0,
    0,
    0,
    0,
    8,
    0,
    0,
    6,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    9,
    1,
    3,
    12,
    0,
    2,
    4,
    7,
    3,
    6,
    6,
    3,
    2,
    10,
    3,
    9,
    4,
    1,
    0,
    16,
    0,
    1,
    2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    2,
    4,
    1,
    1,
    2,
    0,
    2,
    2,
    0,
    6,
    0,
    3,
    13,
    2,
    4,
    1,
    11,
    3,
    0,
    0,
    0,
    0,
    1,
    4,
    0,
    0,
    0,
    1,
    3,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    1,
    9,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    2,
    1,
    2,
    1,
    0,
    0,
    3,
    1,
    0,
    1,
    0,
    1,
    1,
    1,
    3,
    1,
    1,
    7,
    0,
    0,
    0,
    1,
    1,
    0,
    4,
    0,
    0,
    0,
    0,
    0,
    1,
    3,
    9,
    1,
    3,
    3,
    1,
    5,
    3,
    2,
    3,
    3,
    4,
    6,
    3,
    6,
    3,
    6,
    10,
    0,
    0,
    2,
    1,
    4,
    1,
    1,
    0,
    0,
    1,
    1,
    1,
]

TS = [l3[i : i + 31] for i in range(0, len(l3), 31)]
# with open("res2.txt", "a", encoding="utf-8") as f:
#     for r in TS:
#         f.write(",".join(str(x) for x in r) + "\n")
dict_analysis = {}
for i in range(col):
    for j in range(i + 1, col):
        ts1, ts2 = 0, 0
        for k in range(row):
            cs1 = ord(TEXT[k][i]) - ordA
            cs2 = ord(TEXT[k][j]) - ordA
            if cs1 == 26 or cs2 == 26:
                continue
            if cs1 > 26:
                cs1 -= 1
            if cs2 > 26:
                cs2 -= 1
            ts1 += TS[cs1][cs2]
            ts2 += TS[cs2][cs1]
        dict_analysis[(i, j)] = ts1
        dict_analysis[(j, i)] = ts2
sorted_key = sorted(dict_analysis, key=dict_analysis.get, reverse=True)
box1 = []
box2 = []
k = 1
# id = 0
# ========================= cặp key cuối cùng hiện tại pair_k_current
pair_k_current = tuple()


def ham_chon_cot_co_do_uu_tien_max(box1, box2, sorted_key, k):
    for key in sorted_key:
        id = 0
        if key[0] in box2:
            for di in range(len(box2)):
                if box2[di] == key[0]:
                    id = di
                    break
            if box1[id] == key[1]:
                continue
        if key[0] not in box1 and key[1] not in box2:
            box1.append(key[0])
            box2.append(key[1])
            k = k + 1
        if k == LEN_KEY:
            pair_k_current = key
            break
    return box1, box2, pair_k_current


box1, box2 = [], []
box1, box2, pair_k_current = ham_chon_cot_co_do_uu_tien_max(box1, box2, sorted_key, k)
################################
ind_first_col = 0
for elem in box1:
    if elem not in box2:
        ind_first_col = elem
        break


################################
def ham_tao_list_key():
    my_key = []
    global ind_first_col
    my_dict_pairs = dict(zip(box1, box2))
    for i in range(col - 1):
        my_key.append(ind_first_col)
        ind_first_col = my_dict_pairs[ind_first_col]
    my_key.append(ind_first_col)
    # print(my_key)
    return my_key


my_key = ham_tao_list_key()
print("KEY Decrypt: ", end=" ")
for elem in my_key:
    print(elem + 1, end="  ")
print()
k_cp = my_key.copy()
dict_keyss = dict(zip(k_cp, list(range(1, LEN_KEY + 1))))
d_sorted = sorted(dict_keyss.items(), key=lambda x: x[0])
values_sorted = [value for key, value in d_sorted]
print("KEY ENCRYPT: ", values_sorted)
################################# in mang theo chi so trong my_key
for row in TEXT:
    for num_col in my_key:
        print(row[num_col], end="")


check = input("\nare you sure you want to exit?(y/n): ")
while check == "y":
    id_cr = sorted_key.index(pair_k_current)
    my_key.pop(-1)
    box1.pop(-1)
    box2.pop(-1)
    k = LEN_KEY - 1
    box1, box2, pair_k_current = ham_chon_cot_co_do_uu_tien_max(
        box1, box2, sorted_key[id_cr + 1 :], k
    )
    ################################
    ind_first_col = 0
    for elem in box1:
        if elem not in box2:
            ind_first_col = elem
            break

    ################################
    def ham_tao_list_key():
        my_key = []
        global ind_first_col
        my_dict_pairs = dict(zip(box1, box2))
        for i in range(col - 1):
            my_key.append(ind_first_col)
            ind_first_col = my_dict_pairs[ind_first_col]
        my_key.append(ind_first_col)
        # print(my_key)
        return my_key

    my_key = ham_tao_list_key()
    print(my_key)
    ################################# in mang theo chi so trong my_key
    for row in TEXT:
        for num_col in my_key:
            print(row[num_col], end="")
    print("khi nào rảnh viết tiếp giờ đang đi viện ^ ^")
    check = input("\nare you sure you want to exit?(y/n): ")
r = 1
for i in range(31):
    r *= i
print(r)
