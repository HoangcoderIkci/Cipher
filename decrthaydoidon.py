import itertools

# strEncr = """ЮРЬЙЖ КБМПО ЬЛФКЯ ЖКЬЗГ ЦЗЭЦУ КПДЭЖ ЫЦДЩН ШЦЮЦО ЖИЬОФ ЭЗЦРЦ СЬЫБЭ ЖГЖШЖ ЭЦРПЩ НКФЕМ ПОЦШГ ЖГЖШЖ ДИЖАК НРФКК ББШФЭ
# ФКЬШИ БЭТУФ СЦГФС ДФШОЖ ЭФОТК ЦЭЭТФ ФШГЖЛ ФЮЖЕЖ ЮЦГЦР БЫРИЖ ЗЩЦШЖ ГВЬБЦ ЭЗОЬМ ЦЭЭЖЭ ЖОЫРЖ
# ШЬГЬО ЬФЕАК БУЖЭФ ОТКПЕ ГЖШГК НВЬГВ ЖЕНГЬ ЛФКЖФ СКБЮЖ КБЬКк ьджщь ЕОЦГК ЬШРНМ ФИСЬБ Сьсшц дьвкЖ ЕУФОЦ ГФСЭЖ ШФОЬЭ НЭЛФЫ ЦДЦЮЬ БГШФО ФЫРЖК ЖДЬКЖ БЖАБК ЖДЬКЖ
# БРЬАЮЦГЦРЦДЮЦЗЭФЕ"""
strEncr = """
ЮРЬЙЖ КБМПО ЬЛФКЯ ЖКЬЗГ ЦЗЭЦУ КПДЭЖ ЫЦДЭЖ ЫЦДШН ШЦЮЦО ЖИЬОФ ЭЗЦРЦ СЬЫБЭ ЖГЖШЖ ДЦЖАК НРФКК ЬБШФЭ ТДЖСЦ ЭЦРПЩ НКФЕМ ПОЦШГ ФКЬШИ ЬЭТУФ ОЦГФС ДФШОЖ ЭФОТК ЦЗЭТФ ФШГЖЛ ФКЖЕЖ ЮЦГЦР ЬЫРЦЖ ЗЩЦШЖ ГВЬБЦ ЭЗОЬМ ЦЗЭЖЭ ЖОЫРЖ ШЬГЬО ЬФЕАК БУЖЭФ ОТКПЕ ГЖШГК НВЬГВ ЖЕНГЬ ЛФКЖФ СКБЮЖ КБЬКК ЬДЖЩЬ ЕОЦГК ЬШРНМ ФИСЬБ СЬСШЦ ДЬВКЖ ЕУФОЦ ГФСЗЖ ШФОЬЭ НЭЛФЫ ЦДЦЮЬ БГШФО ФЫРЖК ЖДЬКЖ БЖАЬК ЖДЬКЖ БРЬАЮ ЦГЦРЦ ДЮЦЗЭ ФЕ
"""
strEncr = strEncr.replace("Ъ", "ь")
strEncr = strEncr.replace(" ", "")
strEncr = strEncr.replace("\n", "")
strEncr = strEncr.upper()

# print(strEncr)
# l3 = [
#     2,
#     12,
#     35,
#     8,
#     14,
#     7,
#     6,
#     15,
#     7,
#     7,
#     19,
#     27,
#     19,
#     45,
#     5,
#     11,
#     26,
#     31,
#     27,
#     3,
#     1,
#     10,
#     6,
#     7,
#     10,
#     1,
#     2,
#     0,
#     0,
#     6,
#     9,
#     5,
#     0,
#     0,
#     0,
#     0,
#     9,
#     1,
#     0,
#     6,
#     0,
#     0,
#     6,
#     0,
#     2,
#     21,
#     0,
#     8,
#     1,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     11,
#     0,
#     0,
#     0,
#     2,
#     35,
#     1,
#     5,
#     3,
#     3,
#     32,
#     0,
#     2,
#     17,
#     0,
#     7,
#     10,
#     3,
#     9,
#     58,
#     6,
#     6,
#     19,
#     6,
#     7,
#     0,
#     1,
#     1,
#     2,
#     4,
#     1,
#     18,
#     1,
#     2,
#     0,
#     3,
#     7,
#     0,
#     0,
#     0,
#     3,
#     3,
#     0,
#     0,
#     5,
#     0,
#     1,
#     5,
#     0,
#     1,
#     50,
#     0,
#     7,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     25,
#     0,
#     3,
#     1,
#     1,
#     29,
#     1,
#     1,
#     13,
#     0,
#     1,
#     5,
#     1,
#     13,
#     22,
#     3,
#     6,
#     8,
#     1,
#     10,
#     0,
#     0,
#     1,
#     1,
#     1,
#     0,
#     5,
#     1,
#     0,
#     0,
#     1,
#     2,
#     9,
#     18,
#     11,
#     27,
#     7,
#     5,
#     10,
#     6,
#     15,
#     13,
#     35,
#     24,
#     63,
#     7,
#     16,
#     39,
#     37,
#     33,
#     3,
#     1,
#     8,
#     3,
#     7,
#     3,
#     3,
#     0,
#     0,
#     1,
#     1,
#     2,
#     5,
#     1,
#     0,
#     0,
#     6,
#     12,
#     0,
#     0,
#     5,
#     0,
#     0,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     35,
#     1,
#     7,
#     1,
#     5,
#     3,
#     0,
#     0,
#     4,
#     0,
#     2,
#     1,
#     2,
#     9,
#     9,
#     1,
#     3,
#     1,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     4,
#     0,
#     0,
#     0,
#     4,
#     4,
#     6,
#     22,
#     5,
#     10,
#     21,
#     2,
#     23,
#     19,
#     11,
#     19,
#     21,
#     20,
#     32,
#     8,
#     13,
#     11,
#     29,
#     29,
#     3,
#     1,
#     17,
#     3,
#     11,
#     1,
#     1,
#     0,
#     0,
#     1,
#     3,
#     17,
#     1,
#     1,
#     4,
#     1,
#     3,
#     0,
#     1,
#     2,
#     4,
#     0,
#     5,
#     1,
#     2,
#     7,
#     9,
#     7,
#     3,
#     10,
#     2,
#     0,
#     0,
#     0,
#     1,
#     3,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     24,
#     1,
#     4,
#     1,
#     0,
#     4,
#     1,
#     1,
#     26,
#     0,
#     1,
#     4,
#     1,
#     2,
#     66,
#     2,
#     10,
#     3,
#     7,
#     10,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     25,
#     1,
#     1,
#     1,
#     1,
#     33,
#     2,
#     1,
#     36,
#     0,
#     1,
#     2,
#     1,
#     8,
#     30,
#     2,
#     0,
#     3,
#     1,
#     6,
#     0,
#     4,
#     0,
#     1,
#     0,
#     0,
#     3,
#     20,
#     0,
#     4,
#     9,
#     18,
#     2,
#     4,
#     1,
#     1,
#     21,
#     1,
#     2,
#     23,
#     0,
#     3,
#     1,
#     3,
#     7,
#     19,
#     5,
#     2,
#     5,
#     3,
#     9,
#     1,
#     0,
#     0,
#     2,
#     0,
#     0,
#     5,
#     1,
#     1,
#     0,
#     3,
#     54,
#     1,
#     2,
#     3,
#     3,
#     34,
#     0,
#     0,
#     58,
#     0,
#     3,
#     0,
#     1,
#     24,
#     67,
#     2,
#     1,
#     9,
#     9,
#     7,
#     1,
#     0,
#     5,
#     2,
#     0,
#     0,
#     36,
#     0,
#     0,
#     3,
#     5,
#     1,
#     28,
#     84,
#     32,
#     47,
#     15,
#     7,
#     18,
#     12,
#     29,
#     19,
#     41,
#     38,
#     30,
#     9,
#     18,
#     43,
#     50,
#     39,
#     3,
#     2,
#     5,
#     2,
#     12,
#     4,
#     3,
#     0,
#     0,
#     2,
#     3,
#     2,
#     7,
#     0,
#     0,
#     0,
#     0,
#     15,
#     0,
#     0,
#     4,
#     0,
#     0,
#     9,
#     0,
#     1,
#     46,
#     0,
#     41,
#     1,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     2,
#     55,
#     1,
#     4,
#     4,
#     3,
#     37,
#     3,
#     1,
#     24,
#     0,
#     3,
#     1,
#     3,
#     7,
#     56,
#     2,
#     1,
#     5,
#     9,
#     16,
#     0,
#     1,
#     1,
#     1,
#     2,
#     0,
#     8,
#     3,
#     0,
#     0,
#     5,
#     8,
#     1,
#     7,
#     1,
#     2,
#     25,
#     0,
#     0,
#     6,
#     0,
#     40,
#     13,
#     3,
#     9,
#     27,
#     11,
#     4,
#     11,
#     82,
#     6,
#     0,
#     1,
#     1,
#     2,
#     2,
#     0,
#     1,
#     8,
#     0,
#     0,
#     17,
#     35,
#     1,
#     27,
#     1,
#     3,
#     31,
#     0,
#     1,
#     28,
#     0,
#     5,
#     1,
#     1,
#     11,
#     56,
#     4,
#     26,
#     18,
#     2,
#     10,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     11,
#     21,
#     0,
#     0,
#     4,
#     1,
#     4,
#     4,
#     4,
#     11,
#     2,
#     6,
#     3,
#     2,
#     0,
#     8,
#     5,
#     5,
#     5,
#     1,
#     5,
#     7,
#     14,
#     7,
#     0,
#     0,
#     1,
#     0,
#     8,
#     3,
#     2,
#     0,
#     0,
#     0,
#     9,
#     1,
#     2,
#     0,
#     0,
#     0,
#     0,
#     2,
#     0,
#     0,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     1,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     4,
#     1,
#     4,
#     1,
#     3,
#     1,
#     0,
#     2,
#     3,
#     0,
#     4,
#     3,
#     3,
#     4,
#     18,
#     5,
#     3,
#     4,
#     2,
#     2,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     3,
#     0,
#     0,
#     0,
#     0,
#     7,
#     0,
#     0,
#     10,
#     0,
#     2,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     12,
#     0,
#     0,
#     0,
#     0,
#     23,
#     0,
#     0,
#     13,
#     0,
#     2,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     7,
#     1,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     5,
#     0,
#     0,
#     0,
#     0,
#     11,
#     0,
#     0,
#     14,
#     0,
#     1,
#     2,
#     0,
#     2,
#     2,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     3,
#     0,
#     0,
#     0,
#     0,
#     8,
#     0,
#     0,
#     6,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     9,
#     1,
#     3,
#     12,
#     0,
#     2,
#     4,
#     7,
#     3,
#     6,
#     6,
#     3,
#     2,
#     10,
#     3,
#     9,
#     4,
#     1,
#     0,
#     16,
#     0,
#     1,
#     2,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     4,
#     1,
#     1,
#     2,
#     0,
#     2,
#     2,
#     0,
#     6,
#     0,
#     3,
#     13,
#     2,
#     4,
#     1,
#     11,
#     3,
#     0,
#     0,
#     0,
#     0,
#     1,
#     4,
#     0,
#     0,
#     0,
#     1,
#     3,
#     1,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     0,
#     0,
#     1,
#     0,
#     0,
#     0,
#     1,
#     9,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     0,
#     2,
#     1,
#     2,
#     1,
#     0,
#     0,
#     3,
#     1,
#     0,
#     1,
#     0,
#     1,
#     1,
#     1,
#     3,
#     1,
#     1,
#     7,
#     0,
#     0,
#     0,
#     1,
#     1,
#     0,
#     4,
#     0,
#     0,
#     0,
#     0,
#     0,
#     1,
#     3,
#     9,
#     1,
#     3,
#     3,
#     1,
#     5,
#     3,
#     2,
#     3,
#     3,
#     4,
#     6,
#     3,
#     6,
#     3,
#     6,
#     10,
#     0,
#     0,
#     2,
#     1,
#     4,
#     1,
#     1,
#     0,
#     0,
#     1,
#     1,
#     1,
# ]
# TS = [l3[i : i + 31] for i in range(0, len(l3), 31)]
# s_L3 = 0
# for el in TS:
#     s_L3 += sum(el)
# for r in TS:
#     for cl in range(len(r)):
#         r[cl] /= s_L3

str = str.upper()

TB_XS = [0] * 32
ord_A = ord("А")
for i in str:
    t = ord(i) - ord_A
    if t <= 31 and t >= 0:
        # print(t)
        TB_XS[t] += 1
# print(TB_XS)
tu_dien2 = {i: TB_XS[i] for i in range(len(TB_XS))}
danh_sach_key2 = sorted(tu_dien2, key=tu_dien2.get, reverse=True)


arrTS = [0] * 32
ord_A = ord("А")
for elem in strEncr:
    arrTS[ord(elem) - ord_A] += 1
tu_dien = {i: arrTS[i] for i in range(len(arrTS))}
# print(tu_dien)
danh_sach_keys = sorted(tu_dien, key=tu_dien.get, reverse=True)

# print(danh_sach_keys)
# tạo mảng delta
Denta = [[0] * 32 for i in range(32)]
for i in range(len(strEncr) - 1):
    f, l = ord(strEncr[i]) - ord_A, ord(strEncr[i + 1]) - ord_A
    Denta[f][l] += 1
s_Denta = 0
for el in Denta:
    s_Denta += sum(el)
for r in Denta:
    for cl in range(len(r)):
        r[cl] /= s_Denta

################################ tạo bảng cho chiến tranh và hòa bình
TS = [[0] * 32 for i in range(32)]
for i in range(len(str) - 1):
    f, l = ord(str[i]) - ord_A, ord(str[i + 1]) - ord_A
    if 0 <= f and f <= 31 and 0 <= l and l <= 31:
        TS[f][l] += 1
s_TS = 0
for el in TS:
    s_TS += sum(el)
for r in TS:
    for cl in range(len(r)):
        r[cl] /= s_TS
###############################


# print(Denta)
# đảo hàng cột:
danh_sach_da_dao_Denta = []
danh_sach_da_dao_Denta = [Denta[i] for i in danh_sach_keys]
danh_sach_da_dao_Denta = [
    [hang[i] for i in danh_sach_keys] for hang in danh_sach_da_dao_Denta
]

tableThayThe = []
tableThayThe = [chr(elem + ord_A) for elem in danh_sach_keys]
# print(tableThayThe)
################################ đảo mảng B
# temp_B = []
# temp = 0
# for i in range(0, 31):
#     temp = -TS[i][i]
#     temp += sum(TS[i])
#     for j in range(31):
#         temp += TS[j][i]
#     temp_B.append(temp)

# tu_dien2 = {i: temp_B[i] for i in range(len(temp_B))}
# danh_sach_key2 = sorted(tu_dien2, key=tu_dien2.get, reverse=True)

danh_sach_da_dao_B = []
danh_sach_da_dao_B = [TS[i] for i in danh_sach_key2]
danh_sach_da_dao_B = [[hang[i] for i in danh_sach_key2] for hang in danh_sach_da_dao_B]


rs = 0
for r in range(len(danh_sach_da_dao_B)):
    for l in range(len(danh_sach_da_dao_B[r])):
        rs += abs(danh_sach_da_dao_B[r][l] - danh_sach_da_dao_Denta[r][l])


def write_tofile(danh_sach_key2, tableThayThe):
    # print(danh_sach_key2)
    # for i in range(len(danh_sach_key2)):
    #     if danh_sach_key2[i] >= 26:
    #         danh_sach_key2[i] += 1

    tableThayThe2 = [chr(elem + ord_A) for elem in danh_sach_key2]
    # print(danh_sach_key2)
    # print(rs)
    # print(strEncr)
    # for i in range(len(tableThayThe)):
    #     print(tableThayThe[i], tableThayThe2[i], end="  ")
    #     strEncr = strEncr.replace(tableThayThe[i], tableThayThe2[i])
    # print(strEncr)
    my_dict_decript = dict(zip(tableThayThe, tableThayThe2))
    with open("resultct_and_hb_permutat.txt", "a", encoding="utf-8") as f:
        f.write("================================\n\n")
        for st in strEncr:
            f.write(my_dict_decript[st])


danh_sach_key2_cp = danh_sach_key2.copy()
check = False
# def bien_doi():
i = 0
while i < 32 - 7:
    if check:
        i = 0
        check = False
    my_list = danh_sach_key2[i : i + 7].copy()
    all_permutations = list(itertools.permutations(my_list))
    for permutat in all_permutations:
        danh_sach_key2_cp = danh_sach_key2.copy()
        # tempp = danh_sach_key2_cp[j]
        # danh_sach_key2_cp[j] = danh_sach_key2_cp[j + i]
        # danh_sach_key2_cp[j + i] = tempp
        danh_sach_key2_cp[i : i + 7] = permutat
        # print(danh_sach_key2_cp)
        danh_sach_da_dao_B = [TS[x] for x in danh_sach_key2_cp]
        danh_sach_da_dao_B = [
            [hang[x] for x in danh_sach_key2_cp] for hang in danh_sach_da_dao_B
        ]
        rs_temp = 0
        for r in range(len(danh_sach_da_dao_B)):
            for l in range(len(danh_sach_da_dao_B[r])):
                rs_temp += abs(danh_sach_da_dao_B[r][l] - danh_sach_da_dao_Denta[r][l])
        if rs_temp < rs and rs_temp < 0.95:
            # print(danh_sach_key2)
            write_tofile(danh_sach_key2.copy(), tableThayThe.copy())
            # print(danh_sach_key2)
            check = True
            i = 0
            danh_sach_key2 = danh_sach_key2_cp.copy()
            # print(rs, rs_temp)
            rs = rs_temp
            # print("Hoan doi")
            break
    i += 3
print(rs, rs_temp)
# print(danh_sach_key2)
# for i in range(len(danh_sach_key2)):
#     if danh_sach_key2[i] >= 26:
#         danh_sach_key2[i] += 1

# tableThayThe2 = [chr(elem + ord_A) for elem in danh_sach_key2]

# print(rs)
# print(strEncr)
# for i in range(len(tableThayThe)):
#     print(tableThayThe[i], tableThayThe2[i], end="  ")
#     strEncr = strEncr.replace(tableThayThe[i], tableThayThe2[i])
# print(strEncr)
# my_dict_decript = dict(zip(tableThayThe, tableThayThe2))
# for st in strEncr:
#     print(my_dict_decript[st], end="")
